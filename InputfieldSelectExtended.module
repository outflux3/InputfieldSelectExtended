<?php

class InputfieldSelectExtended extends InputfieldSelect
{
    public static function getModuleInfo()
    {
		return array(
			'title'     => __('Select Extended', __FILE__),
			'version'   => 1,
			'summary'   => __('Selection with extended attributes. An enhancement to select', __FILE__),
			'permanent' => false,
			);
	}

	/**
	 * inputfield is loaded
	 */
	public function init() {
		// append script needed for the inputfield
		$this->config->scripts->add($this->config->urls->InputfieldSelectExtended . 'InputfieldSelectExtended.js');
	}

    /**
     * Adds an option with extended attributes that allow mutually exclusive groups.
     */
    public function addOption($value, $label = null, array $attributes = null)
    {
        if (
            is_null($value) ||
            (is_string($value) && !strlen($value))
        ) {
            return $this;
        }


        if (null === $attributes) {
            $attributes = array();
        }

        $extra_atts = $this->extendAttributes($value, $label);
        $attributes = array_merge($attributes, $extra_atts);

		return parent::addOption($value, $label, $attributes);
	}


    /**
     * Hook this and return an array with whatever extended attributes you need.
     *
     */
    public function ___extendAttributes($id, $value)
    {
        $atts = array();

        /**
         * Either hook this method to do what you want or implement things directly if this
         * is the only use of this Inputfield.
         * For your example you'd grab the fields you want from your page and put into data
         * attributes...
         */
        $page = wire()->pages->get($id);
        if($page->data_description) {
            $atts['data-description'] = $page->data_description;
        }

        $atts['data-name'] = $page->name;

        if($page->image != '') {
            $atts['data-thumbnail'] = $page->image->first()->width(565)->url;
        }

        return $atts;
    }
}









